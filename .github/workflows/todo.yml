name: To Do app CI & CD
on: [push, pull_request]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      MONGO_DB_CONNECTION: ${{secrets.MONGO_DB_CONNECTION}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
    steps:
    - uses: actions/checkout@v2
    - name: Build test image
      run: docker build --tag travis_todo:latest --target test .
    - name: Run unit test
      run: docker run travis_todo todo_app/test/test_unit.py
    - name: Run integration test
      run: docker run --env-file .env.test travis_todo todo_app/test/test_appTest.py
    - name: Run end-to-end test
      # You'll need to adjust this to also pass in the relevant environment variables
      run: docker run --env MONGO_DB_CONNECTION --env DATABASE_NAME travis_todo todo_app/test/test_appUiTest.py

  deployingtoheroku:
    name: deploy to Azure
    runs-on: ubuntu-latest
    # Only deploy when the test pass
    needs: [test]
    # if: contains('refs/heads/production', github.ref)  
    env:
      HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
      MONGO_DB_CONNECTION: ${{ secrets.MONGO_DB_CONNECTION}}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME}}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID}}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID}} 
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID}}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET}}
      TF_VAR_gitClientId: ${{ secrets.OAUTH_CLIENT_ID}}
      TF_VAR_gitClientSecret: ${{ secrets.OAUTH_CLIENT_SECRET}}
    steps:
    - uses: actions/checkout@v2
    - run: docker login  --username kamolsavar --password ${{secrets.password}}
    - run: docker build --target production --tag kamolsavar/todo-terraform-app:latest .
    - run: docker push kamolsavar/todo-terraform-app:latest
    - run: terraform init
    - run: terraform apply -auto-approve
    - run: curl -dH -X POST "$(terraform output -raw cd_webhook)"